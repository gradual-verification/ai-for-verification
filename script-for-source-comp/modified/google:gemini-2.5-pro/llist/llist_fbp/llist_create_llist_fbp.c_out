predicate llist(struct llist *list; list<int> v) =
list->first |-> ?_f &*& list->last |-> ?_l &*& lseg(_f, _l, v) &*& node(_l, _, _) &*& malloc_block_llist(list);
predicate lseg(struct node *n1, struct node *n2; list<int> v) =
n1 == n2 ? true &*& v == nil : node(n1, ?_n, ?h) &*& lseg(_n, n2, ?t) &*& v == cons(h, t);
struct node {
struct node *next;
int value;
};
struct llist {
struct node *first;
struct node *last;
};
struct llist *create_llist()
{
struct llist *l = malloc(sizeof(struct llist));
if (l == 0) abort();
struct node *n = calloc(1, sizeof(struct node));
if (n == 0) abort();
l->first = n;
l->last = n;
return l;
}
