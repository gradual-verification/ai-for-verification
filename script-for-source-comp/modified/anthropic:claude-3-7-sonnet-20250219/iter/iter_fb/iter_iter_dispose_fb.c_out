struct node {
struct node *next;
int value;
};
struct llist {
struct node *first;
struct node *last;
};
struct iter {
struct node *current;
};
void iter_dispose(struct iter *i)
{
free(i);
}
struct node {
struct node *next;
int value;
};
struct llist {
struct node *first;
struct node *last;
};
struct iter {
struct node *current;
};
void iter_dispose(struct iter *i)
{
free(i);
}
struct node {
struct node *next;
int value;
};
struct llist {
struct node *first;
struct node *last;
};
struct iter {
struct node *current;
};
void iter_dispose(struct iter *i)
{
free(i);
}
struct node {
struct node *next;
int value;
};
struct llist {
struct node *first;
struct node *last;
};
/*@
predicate lseg(struct node *n1, struct node *n2; list<int> v) =
n1 == n2 ? true &*& v == nil : node(n1, ?_n, ?h) &*& lseg(_n, n2, ?t