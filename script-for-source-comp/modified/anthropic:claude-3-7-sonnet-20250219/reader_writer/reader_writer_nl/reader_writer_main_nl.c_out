struct rwlock {
struct mutex *mutex;
int readers;
};
struct rwlock *rwlock_init()
{
struct rwlock *l = malloc(sizeof(struct rwlock));
if (l == 0) abort();
l->readers = 0;
l->mutex = create_mutex();
return l;
}
void reader(struct rwlock *l)
{
struct mutex *mutex = l->mutex;
mutex_acquire(mutex);
if (l->readers == INT_MAX) {
abort();
}
l->readers++;
mutex_release(mutex);
mutex_acquire(mutex);
if (l->readers == 0) {
abort();
}
l->readers--;
mutex_release(mutex);
}
void writer(struct rwlock *l)
{
struct mutex *mutex = l->mutex;
for (;;)
{
mutex_acquire(mutex);
if (l->readers == 0) {
break;
}
mutex_release(mutex);
}
mutex_release(mutex);
}
int main()
{
struct rwlock *l = rwlock_init();
thread_start(reader, l);
thread_start(writer, l);
return 0;
}
