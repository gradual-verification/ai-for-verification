struct tokenizer
{
charreader*           next_char;
int                   lastread;
int                   lasttoken;
struct string_buffer* buffer;
};
typedef int charreader();
void print_string_buffer(struct string_buffer *buffer)
{
int n = string_buffer_get_length(buffer);
char *pcs = string_buffer_get_chars(buffer);
int i;
for (i = 0; i < n; i++)
{
putchar(pcs[i]);
}
}
void print_token(struct tokenizer* tokenizer)
{
switch ( tokenizer->lasttoken )
{
case '(':
puts("LPAREN");
break;
case ')':
puts("RPAREN");
break;
case '0':
putchar('N');
print_string_buffer(tokenizer->buffer);
puts("");
break;
case 'S':
putchar('S');
print_string_buffer(tokenizer->buffer);
puts("");
break;
case 'B':
puts("BADCHAR");
break;
}
}